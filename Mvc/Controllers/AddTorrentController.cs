/* ------------------------------------------------------------------------------
<auto-generated>
    This file was generated by Sitefinity CLI v1.1.0.21
</auto-generated>
------------------------------------------------------------------------------ */

using SitefinityWebApp.Mvc.Models;
using System.Web.Mvc;
using Telerik.Sitefinity.Mvc;
using Telerik.Sitefinity.Personalization;
using System;
using System.Linq;
using Telerik.Sitefinity.DynamicModules;
using Telerik.Sitefinity.DynamicModules.Model;
using Telerik.Sitefinity.Modules.News;
using Telerik.Sitefinity.News.Model;
using Telerik.Sitefinity.RelatedData;
using Telerik.Sitefinity.Utilities.TypeConverters;

namespace SitefinityWebApp.Mvc.Controllers
{
	[ControllerToolboxItem(Name = "AddTorrent_MVC", Title = "AddTorrent", SectionName = "CustomWidgets")]
	public class AddTorrentController : Controller, IPersonalizable
	{
		// GET: AddTorrent
		public ActionResult Index()
		{
			var model = new AddTorrentModel();
			return View(model);
		}

		//[HttpPost]
		//public ActionResult Save()
  //      {
  //          if (!ModelState.IsValid)
  //          {
  //              DynamicModuleManager dynamicModuleManager = DynamicModuleManager.GetManager();
  //              Type torrentType = TypeResolutionService.ResolveType("Telerik.Sitefinity.DynamicTypes.Model.Torrent");
  //              var item = dynamicModuleManager.CreateItem(torrentType);


  //              //dynamicModuleManager.Lifecycle.Publish(item);
  //              dynamicModuleManager.SaveChanges();
  //          }
  //      }
		
        protected override void HandleUnknownAction(string actionName)
        {
            this.ActionInvoker.InvokeAction(this.ControllerContext, "Index");
        }

		public string Message { get; set; }
	}
}